global:
  replicaCount: 1

  image:
    pullPolicy: IfNotPresent

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }
  podLabels: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  # resources:
  #   requests:
  #     memory: 256Mi
  #     cpu: 20m
  #   limits:
  #     memory: 1024Mi
  #     cpu: 300m

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  serviceDiscoveryRoleBinding: true
  env:
    TEST_ENV: "TEST"

keydb:
  enabled: true
  service:
    selector:
      app: keydb
    port: 6379
    targetPort: 6379
  image:
    repository: "eqalpha/keydb"
    tag: "latest"
  ports:
    - name: tcp
      containerPort: 6379
      protocol: TCP
  command: [ "keydb-server" ]
  args:
    - "--appendonly"
    - "yes"
    - "--requirepass"
    - "$(REDIS_PASSWORD)"
    - "--maxmemory"
    - "512mb"
    - "--maxmemory-policy"
    - "allkeys-lru"
  resources:
    requests:
      memory: 256Mi
      cpu: 20m
    limits:
      memory: 384Mi
      cpu: 300m
  livenessProbe:
    initialDelaySeconds: 3
    periodSeconds: 3
    tcpSocket:
      port: 6379
  readinessProbe:
    initialDelaySeconds: 3
    periodSeconds: 3
    tcpSocket:
      port: 6379
  env:
    REDIS_PASSWORD: 123

zookeeper:
  image:
    repository: "confluentinc/cp-zookeeper"
    tag: "7.6.2"
  livenessProbe:
    exec:
      command: [ '/bin/bash', '-c', 'echo "ruok" | nc -w 2 localhost 2181 | grep imok' ]
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    exec:
      command: [ '/bin/bash', '-c', 'echo "ruok" | nc -w 2 localhost 2181 | grep imok' ]
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  service:
    port: 2181
    targetPort: 2181
  resources:
    requests:
      memory: 256Mi
      cpu: 20m
    limits:
      memory: 384Mi
      cpu: 300m
  env:
    ZOOKEEPER_CLIENT_PORT: 2181
    ZOOKEEPER_TICK_TIME: 2000
    ZOOKEEPER_SERVER_ID: 1
    KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"

kafka:
  enabled: true
  kafka:
    version: "3.8.0"   # Kafka version
    replicas: 3        # Number of Kafka replicas
    listeners:
      plain:
        port: 9092
        type: internal
        tls: false
  zookeeper:
    url: persistence-zookeeper.persistence:2181
  entityOperator:
    topicOperator: {}
    userOperator: {}

postgres:
  enabled: true
  team: "acid"
  version: "16"
  replicas: "2"

clickhouse:
  enabled: true
