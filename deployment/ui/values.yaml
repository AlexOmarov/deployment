global:
  replicaCount: 1

  image:
    pullPolicy: IfNotPresent

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: { }
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: { }
  podLabels: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  # resources:
  #   requests:
  #     memory: 256Mi
  #     cpu: 20m
  #   limits:
  #     memory: 1024Mi
  #     cpu: 300m

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  serviceDiscoveryRoleBinding: true
  env:
    TEST_ENV: "TEST"

grafana:
  enabled: true
  image:
    repository: "grafana/grafana-oss"
    tag: "11.2.2-ubuntu"
  pv:
    enabled: true
    accessModes:
      - ReadWriteMany
    hostPath: "/run/desktop/mnt/host/g/work/projects/mail-service/config/observability/grafana"
  service:
    port: 3000
    targetPort: 3000
  ports:
    - name: http
      containerPort: 3000
      protocol: TCP
  resources:
    requests:
      memory: 512Mi
      cpu: 20m
    limits:
      memory: 2048Mi
      cpu: 300m
  livenessProbe:
    failureThreshold: 6
    initialDelaySeconds: 60
    periodSeconds: 60
    successThreshold: 1
    httpGet:
      port: 3000
      path: /api/health
    timeoutSeconds: 5
  readinessProbe:
    failureThreshold: 6
    initialDelaySeconds: 60
    periodSeconds: 60
    successThreshold: 1
    httpGet:
      port: 3000
      path: /api/health
    timeoutSeconds: 5
